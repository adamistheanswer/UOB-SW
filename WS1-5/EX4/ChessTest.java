import static org.junit.Assert.assertEquals;

import org.junit.Test;

/**
 * @author Adam Robinson
 */

public class ChessTest {

  // Initialise the Chessboard
  @Test
  public void test1() {

    Chess letsPlayChess = new Chess();

    String state = "       a        b        c        d        e        f        g        h      \n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "8 |rook    |knight  |bishop  |queen   |king    |bishop  |knight  |rook    | 8\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "7 |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    | 7\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "6 |        |        |        |        |        |        |        |        | 6\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "5 |        |        |        |        |        |        |        |        | 5\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "4 |        |        |        |        |        |        |        |        | 4\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "3 |        |        |        |        |        |        |        |        | 3\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "2 |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    | 2\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "1 |ROOK    |KNIGHT  |BISHOP  |QUEEN   |KING    |BISHOP  |KNIGHT  |ROOK    | 1\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "       a        b        c        d        e        f        g        h      \n";

    assertEquals(state, letsPlayChess.toString());
  }

  // Single Move Test
  @Test
  public void test2() {

    Chess letsPlayChess = new Chess();
    letsPlayChess.play("b1b3");

    String state = "       a        b        c        d        e        f        g        h      \n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "8 |rook    |knight  |bishop  |queen   |king    |bishop  |knight  |rook    | 8\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "7 |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    | 7\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "6 |        |        |        |        |        |        |        |        | 6\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "5 |        |        |        |        |        |        |        |        | 5\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "4 |        |        |        |        |        |        |        |        | 4\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "3 |        |KNIGHT  |        |        |        |        |        |        | 3\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "2 |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    | 2\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "1 |ROOK    |        |BISHOP  |QUEEN   |KING    |BISHOP  |KNIGHT  |ROOK    | 1\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "       a        b        c        d        e        f        g        h      \n";

    assertEquals(state, letsPlayChess.toString());
  }

  // Three concurrent moves, board doesn't reset between moves.
  @Test
  public void test3() {

    Chess letsPlayChess = new Chess();
    letsPlayChess.play("b1b3");
    letsPlayChess.play("c8c4");
    letsPlayChess.play("f1e5");

    String state = "       a        b        c        d        e        f        g        h      \n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "8 |rook    |knight  |        |queen   |king    |bishop  |knight  |rook    | 8\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "7 |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    | 7\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "6 |        |        |        |        |        |        |        |        | 6\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "5 |        |        |        |        |BISHOP  |        |        |        | 5\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "4 |        |        |bishop  |        |        |        |        |        | 4\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "3 |        |KNIGHT  |        |        |        |        |        |        | 3\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "2 |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    | 2\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "1 |ROOK    |        |BISHOP  |QUEEN   |KING    |        |KNIGHT  |ROOK    | 1\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "       a        b        c        d        e        f        g        h      \n";

    assertEquals(state, letsPlayChess.toString());
  }

  // Piece removed from board at B3. Array replaced with null at b3.
  @Test
  public void test4() {

    Chess letsPlayChess = new Chess();
    letsPlayChess.play("b1b3");
    letsPlayChess.play("c8b3");
    letsPlayChess.play("b3e5");

    String state = "       a        b        c        d        e        f        g        h      \n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "8 |rook    |knight  |        |queen   |king    |bishop  |knight  |rook    | 8\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "7 |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    |pawn    | 7\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "6 |        |        |        |        |        |        |        |        | 6\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "5 |        |        |        |        |bishop  |        |        |        | 5\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "4 |        |        |        |        |        |        |        |        | 4\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "3 |        |        |        |        |        |        |        |        | 3\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "2 |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    | 2\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "1 |ROOK    |        |BISHOP  |QUEEN   |KING    |BISHOP  |KNIGHT  |ROOK    | 1\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "       a        b        c        d        e        f        g        h      \n";

    assertEquals(state, letsPlayChess.toString());
  }

  // 4 Move Check
  @Test
  public void test5() {

    Chess letsPlayChess = new Chess();
    letsPlayChess.play("f2f4");
    letsPlayChess.play("e7e6");
    letsPlayChess.play("g2g4");
    letsPlayChess.play("d8h4");

    String state = "       a        b        c        d        e        f        g        h      \n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "8 |rook    |knight  |bishop  |        |king    |bishop  |knight  |rook    | 8\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "7 |pawn    |pawn    |pawn    |pawn    |        |pawn    |pawn    |pawn    | 7\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "6 |        |        |        |        |pawn    |        |        |        | 6\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "5 |        |        |        |        |        |        |        |        | 5\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "4 |        |        |        |        |        |PAWN    |PAWN    |queen   | 4\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "3 |        |        |        |        |        |        |        |        | 3\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "2 |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |        |        |PAWN    | 2\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "1 |ROOK    |KNIGHT  |BISHOP  |QUEEN   |KING    |BISHOP  |KNIGHT  |ROOK    | 1\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "       a        b        c        d        e        f        g        h      \n";

    assertEquals(state, letsPlayChess.toString());
  }

  @Test
  public void test6() {

    Chess letsPlayChess = new Chess();
    letsPlayChess.play("f2f4");
    letsPlayChess.play("e7e6");
    letsPlayChess.play("g2g4");
    letsPlayChess.play("d8h4");
    letsPlayChess.play("f1f4");
    letsPlayChess.play("e1e5");
    letsPlayChess.play("g1g4");
    letsPlayChess.play("d1h4");

    String state = "       a        b        c        d        e        f        g        h      \n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "8 |rook    |knight  |bishop  |        |king    |bishop  |knight  |rook    | 8\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "7 |pawn    |pawn    |pawn    |pawn    |        |pawn    |pawn    |pawn    | 7\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "6 |        |        |        |        |pawn    |        |        |        | 6\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "5 |        |        |        |        |KING    |        |        |        | 5\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "4 |        |        |        |        |        |BISHOP  |KNIGHT  |QUEEN   | 4\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "3 |        |        |        |        |        |        |        |        | 3\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "2 |PAWN    |PAWN    |PAWN    |PAWN    |PAWN    |        |        |PAWN    | 2\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "1 |ROOK    |KNIGHT  |BISHOP  |        |        |        |        |ROOK    | 1\n"
        + "  +--------+--------+--------+--------+--------+--------+--------+--------+\n"
        + "       a        b        c        d        e        f        g        h      \n";

    assertEquals(state, letsPlayChess.toString());
  }


}



